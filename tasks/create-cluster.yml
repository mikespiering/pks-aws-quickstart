---
platform: linux

inputs:
- name: env # contains the env file with target OpsMan Information
- name: terraform-output
- name: pks
params:
  ENV_FILE: env.yml
  CLUSTER_HOSTNAME:
  CLUSTER_NAME:
  # - Filepath of the env config YAML
  # - The path is relative to root of the `env` input

run:
  path: bash
  args:
  - "-c"
  - |
    set -eu
    cat /var/version && echo ""
    curl -L -s -o jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
    chmod +x jq
    mv pks/pks-linux-* pks-cli
    chmod +x pks-cli
    echo "getting pks creds"
    export PKS_PASSWORD="$(om --env env/${ENV_FILE} credentials --product-name pivotal-container-service --credential-reference .properties.uaa_admin_password -f secret)" 
    export PKS_API="$(./jq -r .pks_api_endpoint terraform-output/metadata)"

    ./pks-cli login -a $PKS_API -u admin -p $PKS_PASSWORD -k
    echo "checking if cluster exists"
    set +e
    ./pks-cli cluster "${CLUSTER_NAME}"
    if [ $? -eq 0 ]; then
      echo "cluster exists skipping creation"
      exit 0  
    fi
    set -e
    echo "starting cluster creation"
    ./pks-cli create-cluster "${CLUSTER_NAME}" -e "${CLUSTER_HOSTNAME}" -p small --wait

    